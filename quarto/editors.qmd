---
title: "rOpenSci Editors"
format: 
  html:
    fig-width: 8
    fig-height: 4
    code-fold: false
---

```{r get-ed-dat, echo = FALSE, message = FALSE}
#| cache: true
library (dashboard)
library (gt)
library (ggplot2)
library (tidyr)
library (dplyr)
library (viridis)
ed_dat <- editor_status (quiet = TRUE)
ed_status <- ed_dat$status
ed_timeline <- ed_dat$timeline
```

## Editor Overview

The following table summarises the availability of general (not statistical)
editors. The `inactive_for` values are hyperlinked to the most recent
submission issue for each editor.

```{r editor-vacation-status, echo = FALSE}
editor_vacation <- airtabler::airtable (
    base = "app8dssb6a7PG6Vwj", table = "editor-vacation-status"
)
editor_vacation <- editor_vacation$`editor-vacation-status`$select_all (fields = list ("editor", "Action", "Start Date", "Return Date"))
index <- vapply (editor_vacation$editor, function (i) length (i) > 0L, logical (1L))
edvac <- editor_vacation [which (index), ]

rev_prod <- airtabler::airtable (
    base = "app8dssb6a7PG6Vwj", table = "reviewers-prod"
)
rev_prod <- rev_prod$`reviewers-prod`$select_all (fields = list ("github", "name"))
rev_prod <- rev_prod [match (edvac$editor, rev_prod$id), ]
edvac$github <- rev_prod$github
edvac$name <- rev_prod$name

edvac$away <- FALSE
s <- edvac$`Start Date` [2]
index <- (!is.na (edvac$`Start Date`) & is.na (edvac$`Return Date`)) |
    as.Date (edvac$`Return Date`) > Sys.Date ()
index [which (is.na (index))] <- FALSE
edvac$away [index] <- TRUE

editors_on_vacation <- edvac$github [which (edvac$away)]
ed_status$status [ed_status$editor %in% editors_on_vacation] <- "ON LEAVE"
```


```{r editor-table, echo = FALSE}
#| label: fig-editors-general
ed_dat_gen <- ed_status [which (!ed_status$stats), ]
ed_dat_gen$status <- factor (ed_dat_gen$status, levels = c ("FREE", "BUSY", "ON LEAVE"))
ed_dat_gen <- dplyr::group_by (ed_dat_gen, status) |>
    dplyr::arrange (dplyr::desc (inactive_days), .by_group = TRUE) |>
    dplyr::ungroup ()

u <- "https://github.com/ropensci/software-review/issues/"
ed_dat_gen <- dashboard:::add_gt_html (ed_dat_gen, u, what = "inactive_for")

gt::gt (
    ed_dat_gen,
    groupname_col = "status"
) |>
    gt::tab_header ("Editor Status Overview") |>
    gt::cols_hide (c (stats, inactive_days, number, state)) |>
    gt::tab_style (
        style = list (gt::cell_fill (color = "#FFFF8088")),
        locations = gt::cells_body (
            columns = c (`editor`, `inactive_for`),
            rows = status == "FREE"
        )
    ) |>
    dashboard:::add_bg_colours ()
```

## Past Editorial Load


```{r timeline-prepro, echo = FALSE}
start_time <- lubridate::ymd ("2020-01-01")
timeline <- dplyr::filter (ed_timeline, month >= start_time) |>
    dplyr::filter (!name %in% c ("haozhu233"))
xlab_pos <- as.Date (min (timeline$month) - lubridate::dmonths (12))
eds_stats <- ed_status$editor [which (ed_status$stats)]
timeline_stats <- timeline [timeline$name %in% eds_stats, ]
timeline <- timeline [!timeline$name %in% eds_stats, ]
timeline$y <- match (timeline$y, unique (timeline$y))
timeline_stats$y <- match (timeline_stats$y, unique (timeline_stats$y))
```

### General editors

::: {style="all.initial;"}
```{r timeline-ed-plot, echo = FALSE, fig.width = 8, fig.height = 8}
ggplot2::ggplot (timeline, ggplot2::aes (x = month, y = y, colour = name)) +
    ggplot2::geom_line (ggplot2::aes (linewidth = value)) +
    ggplot2::scale_linewidth (range = c (1, 25)) +
    ggplot2::geom_text (
        ggplot2::aes (x = xlab_pos, y = y, label = name),
        hjust = 0,
        vjust = 0.5,
        fontface = "plain",
        size = 4,
        colour = "black"
    ) +
    ggplot2::xlab ("Year") +
    viridis::scale_color_viridis (discrete = TRUE) +
    ggplot2::theme (
        axis.text.y = ggplot2::element_blank (),
        axis.ticks.y = ggplot2::element_blank (),
        axis.title.y = ggplot2::element_blank (),
        legend.position = "none",
        plot.margin = ggplot2::margin (1, 1, 1, 1, "cm")
    )
```
:::

### Statistical editors

```{r set-fig-ht, echo = FALSE}
opts <- knitr::opts_chunk$get ()
neds <- length (unique (timeline$name))
neds_stats <- length (unique (timeline_stats$name))
ht <- ceiling (8 * neds_stats / neds) + 1
knitr::opts_chunk$set (fig.height = ht)
```


::: {style="all.initial;"}
```{r timeline-stats-ed-plot, echo = FALSE, fig.width = 8}
ggplot2::ggplot (timeline_stats, ggplot2::aes (x = month, y = y, colour = name)) +
    ggplot2::geom_line (ggplot2::aes (linewidth = value)) +
    ggplot2::scale_linewidth (range = c (1, 25)) +
    ggplot2::geom_text (
        ggplot2::aes (x = xlab_pos, y = y, label = name),
        hjust = 0,
        vjust = 0.5,
        fontface = "plain",
        size = 4,
        colour = "black"
    ) +
    ggplot2::xlab ("Year") +
    ggplot2::scale_y_continuous (limits = c (0.5, neds_stats + 0.5)) +
    viridis::scale_color_viridis (discrete = TRUE) +
    ggplot2::theme (
        axis.text.y = ggplot2::element_blank (),
        axis.ticks.y = ggplot2::element_blank (),
        axis.title.y = ggplot2::element_blank (),
        legend.position = "none",
        plot.margin = ggplot2::margin (0, 1, 0, 1, "cm")
    )
```
:::

```{r reset-fig-ht, echo = FALSE}
knitr::opts_chunk$set (fig.height = opts$fig.height)
```
