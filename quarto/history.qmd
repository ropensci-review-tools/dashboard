---
title: "Historical Data"
format: 
  html:
    fig-width: 8
    fig-height: 4
    code-fold: false
---

```{r load-pkg, echo = FALSE, message = FALSE}
library (dashboard)
library (ggplot2)
library (lubridate)
```


```{r get-rev-history, echo = FALSE}
#| cache: true
dat <- review_history (quiet = TRUE)
```

## Package submissions

This chart shows the total number of packages *submitted for review* each
quarter. Main lines shows numbers of reviews for all packages, with trends
distinguishing general review from statistical software review starting from
September 2021. Prior to this time, all reviews were "general".

```{r history-submissions, echo = FALSE}
# Convert opened/closed dates to monthly sequence This is adapted from the editors
# timeline code in R/editors.R.
get_submissions <- function (dat, period = "quarter") {

    period <- match.arg (period, c ("quarter", "semester"))

    if (period == "quarter") {
        seqs <- lubridate::quarter (dat$opened_at, type = "date_first")
    } else if (period == "semester") {
        seqs <- lubridate::semester (dat$opened_at, with_year = TRUE)
    }
    seq_table <- table (unlist (seqs))
    nms <- names (seq_table)
    if (period == "semester") {
        nms <- gsub ("\\.1$", "-01-01", nms)
        nms <- gsub ("\\.2$", "-07-01", nms)
    }
    data.frame (
        date = lubridate::ymd (nms),
        submissions = as.integer (seq_table)
    )
}

# NOTE: Text needs to be changed to reflect changes in `period` here.
period <- "quarter"
submissions_all <- get_submissions (dat, period = period)
submissions_all$type <- "all"
submissions_all$lty <- 1L
submissions_gen <- get_submissions (dat [which (!dat$stats), ], period = period)
submissions_gen$type <- "general"
submissions_gen$lty <- 2L
submissions_stats <- get_submissions (dat [which (dat$stats), ], period = period)
submissions_stats$type <- "stats"
submissions_stats$lty <- 1L

index <- which (submissions_gen$date %in% submissions_stats$date)
index <- c (min (index) - 1L, index) # To ensure line joins to previous
submissions_gen <- submissions_gen [index, ]

submissions <- rbind (submissions_all, submissions_gen, submissions_stats)
```
```{r plot-submission-history, echo = FALSE}
ytxt <- paste0 ("Nr. submissions / ", ifelse (period == "quarter", "quarter", "half-year"))
ggplot (submissions, aes (x = date, y = submissions, colour = type)) +
    geom_line (linetype = submissions$lty) +
    xlab ("Year") +
    ylab (ytxt) +
    theme_minimal () +
    theme (
        legend.position = "inside",
        legend.position.inside = c (0.1, 0.8)
    )
```

## Packages under review

This chart shows numbers of packages *simultaneously under review* each quarter,
with same lines as previous graph.


```{r history-months, echo = FALSE}
get_reviews <- function (dat, period = "quarter") {
    period <- match.arg (period, c ("quarter", "semester"))

    if (period == "quarter") {
        seqs <- lubridate::quarter (dat$opened_at, type = "date_first")
    } else if (period == "semester") {
        seqs <- lubridate::semester (dat$opened_at, with_year = TRUE)
    }
    dat$closed_at [which (is.na (dat$closed_at))] <- Sys.Date ()
    date_seqs <- lapply (seq_len (nrow (dat)), function (i) {
        s <- seq (dat$opened_at [i], dat$closed_at [i], by = "1 month")
        if (period == "quarter") {
            s <- unique (lubridate::quarter (s, type = "date_first"))
        } else if (period == "semester") {
            s <- as.character (unique (lubridate::semester (s, with_year = TRUE)))
            s <- gsub ("\\.1$", "-01-01", s)
            s <- gsub ("\\.2$", "-07-01", s)
            s <- lubridate::ymd (s)
        }
        return (as.character (s))
    })
    date_seq_table <- table (unlist (date_seqs))
    data.frame (
        date = lubridate::ymd (names (date_seq_table)),
        reviews = as.integer (date_seq_table)
    )
}

reviews_all <- get_reviews (dat)
reviews_all$type <- "all"
reviews_all$lty <- 1L
reviews_gen <- get_reviews (dat [which (!dat$stats), ])
reviews_gen$type <- "general"
reviews_gen$lty <- 2L
reviews_stats <- get_reviews (dat [which (dat$stats), ])
reviews_stats$type <- "stats"
reviews_stats$lty <- 1L

index <- which (reviews_gen$date %in% reviews_stats$date)
index <- c (min (index) - 1L, index) # To ensure line joins to previous
reviews_gen <- reviews_gen [index, ]

reviews <- rbind (reviews_all, reviews_gen, reviews_stats)
```

```{r plot-review-history, echo = FALSE}
ggplot (reviews, aes (x = date, y = reviews, colour = type)) +
    geom_line (linetype = reviews$lty) +
    xlab ("Year") +
    ylab ("Nr. active reviews / month") +
    theme_minimal () +
    theme (
        legend.position = "inside",
        legend.position.inside = c (0.1, 0.8)
    )
```

## Review duration {#review-duration}

The next chart shows the average duration of the review process, plotted
against the months in which each review started. (The data have been slightly
smoothed to aid visual display.)

```{r rev-duration, echo = FALSE}
dat_closed <- dat [which (dat$state == "CLOSED"), ]
period <- "quarter" # (month, quarter, semester)

get_rev_durations <- function (dat, period = "quarter", flen = 3) {

    period <- match.arg (period, c ("quarter", "semester"))

    if (period == "month") {
        dates <- paste0 (format (dat$opened_at, "%Y-%m"), "-01")
    } else if (period == "quarter") {
        dates <- lubridate::quarter (dat$opened_at, type = "date_first")
    } else if (period == "semester") {
        s <- lubridate::semester (dat$opened_at)
        dates <- paste0 (
            lubridate::year (dat$opened_at),
            c ("-01-01", "-07-01") [s]
        )
    }

    rev_dur <- data.frame (
        date = lubridate::ymd (dates),
        duration = dat$duration_days * 12 / 365
    ) |>
        dplyr::group_by (date) |>
        dplyr::summarise (dur = mean (duration, na.rm = TRUE))
    # Those quarterly data are quite jumpy, so apply a filter:
    filter_dat <- function (dat, flen = 5) {
        index <- seq_len (length (dat) - flen + 1) + floor (flen / 2)
        x <- seq_len (flen) - ceiling (flen / 2)
        x <- -abs (x)
        filt <- exp (x)
        filt <- filt / sum (filt)
        dat [index] <- stats::filter (dat, filt) [index]
        return (dat)
    }
    rev_dur$dur <- filter_dat (rev_dur$dur, flen = flen)

    return (rev_dur)
}

rev_dur_all <- get_rev_durations (dat_closed)
rev_dur_all$type <- "all"
rev_dur_all$lty <- 1L
rev_dur_gen <- get_rev_durations (dat_closed [which (!dat_closed$stats), ])
rev_dur_gen$type <- "general"
rev_dur_gen$lty <- 2L
rev_dur_stats <- get_rev_durations (dat_closed [which (dat_closed$stats), ])
rev_dur_stats$type <- "stats"
rev_dur_stats$lty <- 1L

index <- which (rev_dur_gen$date %in% rev_dur_stats$date)
index <- c (min (index) - 1L, index) # To ensure line joins to previous
rev_dur_gen <- rev_dur_gen [index, ]

rev_dur <- rbind (rev_dur_all, rev_dur_gen, rev_dur_stats)
```

```{r rev-duration-plot, echo = FALSE, warning = FALSE}
ggplot (rev_dur, aes (x = date, y = dur, colour = type)) +
    geom_line (linetype = rev_dur$lty) +
    theme_minimal () +
    xlab ("Year") +
    ylab ("Review Duration (months)") +
    ylim (c (0, 11)) +
    theme (
        legend.position = "inside",
        legend.position.inside = c (0.1, 0.8)
    )
```
