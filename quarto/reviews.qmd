---
title: "Software Review Overview"
format: 
  html:
    fig-width: 8
    fig-height: 4
    code-fold: false
---

```{r get-rev-dat, echo = FALSE}
#| cache: true
library (dashboard)
library (gt)
rev_dat <- review_status (open_only = TRUE, browse = FALSE, quiet = TRUE)
# The rest is code from dashboard/pkg/R/gh-table.R
```

```{r add-html-to-table, echo = FALSE}
u <- "https://github.com/ropensci/software-review/issues/"
dat <- rev_dat
# Number has to come last here!!
dat <- dashboard:::add_gt_html (dat, u, "title")
dat <- dashboard:::add_gt_html (dat, u, "number")
```

```{r add-urgency-column, echo = FALSE}
# Then create an "urgency" column used to highlight rows needing urgent
# attention. Note that colours have to be individually hand-coded in the
# `gt` code below, so use of any value other than `ncols = 5` requires the
# subsequent colors to be re-coded.
ncols <- 5L
dat$urgency <- 0L

# time scales for each stage, in days
time_scales <- list (
    c (0, 7), # initial editorial handling
    c (1, 7), # editor checks
    c (2, 14), # seeking reviewers
    c (3, 21), # reviews
    c (4, 21), # author responses
    c (5, 21) # reviewer responses
)
for (i in time_scales) {
    index <- grep (paste0 ("^", i [1]), dat$stage)
    dat$urgency [index] <-
        floor (as.numeric (dat$elapsed_days [index]) / i [2])
}

dat$urgency [dat$urgency > ncols] <- ncols
dat$urgency [grepl ("holding", dat$labels)] <- 0
dat_holding <- dat [grep ("holding", dat$labels), ] # Done at end
dat <- dat [which (!grepl ("holding", dat$labels)), ]
```

```{r dat-stages, echo = FALSE}
sub_types <- table (dat$submission_type)
```

There are currently:<br>

- `r sub_types [["Pre-submission"]]` pre-submission issues<br>
- `r sub_types [["Standard"]]` standard issues<br>
- `r sub_types [["Stats"]]` stats issues

## 0\/Pre-submission

```{r dat0, echo = FALSE}
dat0 <- dat [which (dat$submission_type == "Pre-submission"), ]
n_lab <- length (which (!is.na (dat0$stage)))
n_nolab <- length (which (is.na (dat0$stage)))
v_lab <- ifelse (n_lab == 1L, "is", "are")
v_nolab <- ifelse (n_nolab == 1L, "is", "are")
i_lab <- ifelse (n_lab == 1L, "issue", "issues")
i_nolab <- ifelse (n_nolab == 1L, "issue", "issues")
```

There `r v_lab` `r n_lab` labelled pre-submission `r i_lab`, and `r n_nolab`
unlabelled `r i_nolab`. Data on the labelled `r i_lab` are:

```{r presub-table-prepro, echo = FALSE}
keep <- c (
    "number", "title", "state", "stats", "stage_date", "editor",
    "elapsed", "elapsed_days", "urgency"
)
dat0_lab <- dat0 [which (!is.na (dat0$stage)) [1], keep, drop = FALSE]
dat0_lab <- dplyr::rename (dat0_lab, "inactive_for" = elapsed) |>
    dplyr::arrange (dplyr::desc (elapsed_days))
dat0_lab$editor [which (!nzchar (dat0_lab$editor))] <- "(None)"
has_presub <- nrow (dat0_lab) > 0

urgency_cols <- c ("number", "title", "state")
```


::: {style="all.initial;"}
```{r presub-table-lab, echo = FALSE, eval = has_presub}
gt::gt (dat0_lab) |>
    gt::cols_hide (c (urgency, state, elapsed_days)) |>
    dashboard:::add_urgency_cols (urgency_cols) |>
    dashboard:::add_bg_colours ()
```
:::

```{r no-presub-lab, echo = FALSE, results = "asis", eval = !has_presub}
cat ("There are currently no submissions at this stage.")
```

```{r presub-nolab-prepro, echo = FALSE, results = "asis"}
dat0_nolab <- dat0 [which (is.na (dat0$stage)), keep, drop = FALSE]
dat0_nolab <- dplyr::rename (dat0_nolab, "inactive_for" = elapsed) |>
    dplyr::arrange (dplyr::desc (elapsed_days))
has_presub_nolab <- nrow (dat0_nolab) > 0
if (has_presub_nolab) {
    dat0_nolab$editor [which (!nzchar (dat0_nolab$editor))] <- "(None)"
    cat ("Data on the unlabelled ", i_nolab, " are:")
}
```


::: {style="all.initial;"}
```{r presub-table-nolab, echo = FALSE, eval = has_presub_nolab}
gt::gt (dat0_nolab) |>
    gt::cols_hide (c (urgency, state, stage_date, editor, elapsed_days)) |>
    dashboard:::add_urgency_cols (urgency_cols) |>
    dashboard:::add_bg_colours ()
```
:::

## 1\/Editor Checks

```{r ed-check-prepro, echo = FALSE}
dat1 <- dat [grep ("^1", dat$stage), keep, drop = FALSE]
dat1 <- dplyr::rename (dat1, "inactive_for" = elapsed) |>
    dplyr::arrange (dplyr::desc (elapsed_days))
dat1$editor [which (!nzchar (dat1$editor))] <- "(None)"
has_ed_checks <- nrow (dat1) > 0L
```


::: {style="all.initial;"}
```{r ed-check-table, echo = FALSE, eval = has_ed_checks}
gt::gt (dat1) |>
    gt::cols_hide (c (urgency, state, elapsed_days)) |>
    dashboard:::add_urgency_cols (urgency_cols) |>
    dashboard:::add_bg_colours ()
```
:::

```{r no-ed-checks, echo = FALSE, results = "asis", eval = !has_ed_checks}
cat ("There are currently no submissions at this stage.")
```


## 2\/Seeking Reviewers

```{r seek-rev-prepro, echo = FALSE}
dat2 <- dat [grep ("^2", dat$stage), keep, drop = FALSE]
dat2 <- dplyr::rename (dat2, "inactive_for" = elapsed) |>
    dplyr::arrange (dplyr::desc (elapsed_days))
dat2$editor [which (!nzchar (dat2$editor))] <- "(None)"
has_seek_rev <- nrow (dat2) > 0L
```

::: {style="all.initial;"}
```{r seek-rev-table, echo = FALSE, eval = has_seek_rev}
gt::gt (dat2) |>
    gt::cols_hide (c (urgency, state, elapsed_days)) |>
    dashboard:::add_urgency_cols (urgency_cols) |>
    dashboard:::add_bg_colours ()
```
:::

```{r no-seek-rev, echo = FALSE, results = "asis", eval = !has_seek_rev}
cat ("There are currently no submissions at this stage.")
```

## 3\/Reviewer(s) Assigned

```{r rev-assign-prepro, echo = FALSE}
dat3 <- dat [grep ("^3", dat$stage), keep, drop = FALSE]
dat3 <- dplyr::rename (dat3, "inactive_for" = elapsed) |>
    dplyr::arrange (dplyr::desc (elapsed_days))
dat3$editor [which (!nzchar (dat3$editor))] <- "(None)"
has_seek_rev <- nrow (dat3) > 0L
```

::: {style="all.initial;"}
```{r rev-assign-table, echo = FALSE, eval = has_seek_rev}
gt::gt (dat3) |>
    gt::cols_hide (c (urgency, state, elapsed_days)) |>
    dashboard:::add_urgency_cols (urgency_cols) |>
    dashboard:::add_bg_colours ()
```
:::

```{r no-rev-assign, echo = FALSE, results = "asis", eval = !has_seek_rev}
cat ("There are currently no submissions at this stage.")
```
